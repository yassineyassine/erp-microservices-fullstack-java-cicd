package com.soft.erp.product.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProductOrderAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductOrderAllPropertiesEquals(ProductOrder expected, ProductOrder actual) {
        assertProductOrderAutoGeneratedPropertiesEquals(expected, actual);
        assertProductOrderAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductOrderAllUpdatablePropertiesEquals(ProductOrder expected, ProductOrder actual) {
        assertProductOrderUpdatableFieldsEquals(expected, actual);
        assertProductOrderUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductOrderAutoGeneratedPropertiesEquals(ProductOrder expected, ProductOrder actual) {
        assertThat(actual)
            .as("Verify ProductOrder auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductOrderUpdatableFieldsEquals(ProductOrder expected, ProductOrder actual) {
        assertThat(actual)
            .as("Verify ProductOrder relevant properties")
            .satisfies(a -> assertThat(a.getPlacedDate()).as("check placedDate").isEqualTo(expected.getPlacedDate()))
            .satisfies(a -> assertThat(a.getStatus()).as("check status").isEqualTo(expected.getStatus()))
            .satisfies(a -> assertThat(a.getCode()).as("check code").isEqualTo(expected.getCode()))
            .satisfies(a -> assertThat(a.getInvoiceId()).as("check invoiceId").isEqualTo(expected.getInvoiceId()))
            .satisfies(a -> assertThat(a.getCustomer()).as("check customer").isEqualTo(expected.getCustomer()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductOrderUpdatableRelationshipsEquals(ProductOrder expected, ProductOrder actual) {
        // empty method
    }
}
